{"ast":null,"code":"import * as actionTypes from './actions';\n\n// =========== GLOBAL STATE ===========\nconst initialState = {\n  selectedItems: [],\n  // contains a list of objects\n  totalPrice: 0,\n  tableId: 5,\n  cartId: 1,\n  searchInputValue: '',\n  products: [],\n  ㅁ\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      {\n        // Default value of quantity is 1 when cart is empty\n        if (state.selectedItems.length === 0) {\n          action.product.prod_quantity = 1;\n        }\n\n        // if item has already been added to shopping cart, only updates the quantity\n        if (state.selectedItems.some(item => item.prod_id === action.product.prod_id)) {\n          const itemIndex = state.selectedItems.findIndex(item => {\n            return item.prod_id === action.product.prod_id;\n          });\n          const itemObj = {\n            ...state.selectedItems[itemIndex]\n          };\n          itemObj.prod_quantity += 1;\n          const itemArray = [...state.selectedItems];\n          itemArray[itemIndex] = itemObj;\n          return {\n            ...state,\n            selectedItems: itemArray\n          };\n        } else {\n          // Adding new items to shopping cart\n          action.product.prod_quantity = 1;\n          let array = [...state.selectedItems];\n          array.push(action.product);\n          return {\n            ...state,\n            selectedItems: array\n          };\n        }\n      }\n    case actionTypes.INCREASE_QUANTITY:\n      {\n        // index value of item\n        const itemIndex = state.selectedItems.findIndex(item => {\n          return item.prod_id === action.prod_obj.prod_id;\n        });\n        const itemObj = {\n          ...state.selectedItems[itemIndex]\n        };\n        itemObj.prod_quantity += 1;\n        const itemArray = [...state.selectedItems];\n        itemArray[itemIndex] = itemObj;\n        return {\n          ...state,\n          selectedItems: itemArray\n        };\n      }\n    case actionTypes.DECREASE_QUANTITY:\n      {\n        // index value of item\n        const itemIndex = state.selectedItems.findIndex(item => {\n          return item.prod_id === action.prod_obj.prod_id;\n        });\n        const itemObj = {\n          ...state.selectedItems[itemIndex]\n        };\n        itemObj.prod_quantity -= 1;\n\n        // If quantity is zero, remove item from cart\n        if (itemObj.prod_quantity === 0) {\n          const itemArray = [...state.selectedItems];\n          itemArray.splice(itemIndex, 1);\n          return {\n            ...state,\n            selectedItems: itemArray\n          };\n        }\n        const itemArray = [...state.selectedItems];\n        itemArray[itemIndex] = itemObj;\n        return {\n          ...state,\n          selectedItems: itemArray\n        };\n      }\n    case actionTypes.CALCULATE_TOTAL_PRICE:\n      {\n        return {\n          ...state,\n          totalPrice: action.total_price\n        };\n      }\n    case actionTypes.SEARCH_PRODUCT_LISTING:\n      {\n        return {\n          ...state,\n          searchInputValue: action.event.target.value\n        };\n      }\n    case actionTypes.ALL_PRODUCT_LISTING:\n      {\n        return {\n          ...state,\n          products: action.products\n        };\n      }\n  }\n  return state;\n};\nexport default reducer;","map":{"version":3,"names":["actionTypes","initialState","selectedItems","totalPrice","tableId","cartId","searchInputValue","products","ㅁ","reducer","state","action","type","ADD_TO_CART","length","product","prod_quantity","some","item","prod_id","itemIndex","findIndex","itemObj","itemArray","array","push","INCREASE_QUANTITY","prod_obj","DECREASE_QUANTITY","splice","CALCULATE_TOTAL_PRICE","total_price","SEARCH_PRODUCT_LISTING","event","target","value","ALL_PRODUCT_LISTING"],"sources":["/Users/sunwoong/Desktop/onegun/project/kiosk/kioskreact/client/src/store/reducer.js"],"sourcesContent":["import * as actionTypes from './actions';\n\n// =========== GLOBAL STATE ===========\nconst initialState = {\n\tselectedItems: [], // contains a list of objects\n\ttotalPrice: 0,\n\ttableId: 5,\n\tcartId: 1,\n\tsearchInputValue: '',\n\tproducts: [],\n\tㅁ\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_TO_CART: {\n\t\t\t// Default value of quantity is 1 when cart is empty\n\t\t\tif (state.selectedItems.length === 0) {\n\t\t\t\taction.product.prod_quantity = 1;\n\t\t\t}\n\n\t\t\t// if item has already been added to shopping cart, only updates the quantity\n\t\t\tif (state.selectedItems.some((item) => item.prod_id === action.product.prod_id)) {\n\t\t\t\tconst itemIndex = state.selectedItems.findIndex((item) => {\n\t\t\t\t\treturn item.prod_id === action.product.prod_id;\n\t\t\t\t});\n\n\t\t\t\tconst itemObj = {\n\t\t\t\t\t...state.selectedItems[itemIndex]\n\t\t\t\t};\n\n\t\t\t\titemObj.prod_quantity += 1;\n\n\t\t\t\tconst itemArray = [ ...state.selectedItems ];\n\t\t\t\titemArray[itemIndex] = itemObj;\n\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedItems: itemArray\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Adding new items to shopping cart\n\t\t\t\taction.product.prod_quantity = 1;\n\t\t\t\tlet array = [ ...state.selectedItems ];\n\t\t\t\tarray.push(action.product);\n\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedItems: array\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tcase actionTypes.INCREASE_QUANTITY: {\n\t\t\t// index value of item\n\t\t\tconst itemIndex = state.selectedItems.findIndex((item) => {\n\t\t\t\treturn item.prod_id === action.prod_obj.prod_id;\n\t\t\t});\n\n\t\t\tconst itemObj = {\n\t\t\t\t...state.selectedItems[itemIndex]\n\t\t\t};\n\n\t\t\titemObj.prod_quantity += 1;\n\n\t\t\tconst itemArray = [ ...state.selectedItems ];\n\t\t\titemArray[itemIndex] = itemObj;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedItems: itemArray\n\t\t\t};\n\t\t}\n\n\t\tcase actionTypes.DECREASE_QUANTITY: {\n\t\t\t// index value of item\n\t\t\tconst itemIndex = state.selectedItems.findIndex((item) => {\n\t\t\t\treturn item.prod_id === action.prod_obj.prod_id;\n\t\t\t});\n\n\t\t\tconst itemObj = {\n\t\t\t\t...state.selectedItems[itemIndex]\n\t\t\t};\n\n\t\t\titemObj.prod_quantity -= 1;\n\n\t\t\t// If quantity is zero, remove item from cart\n\t\t\tif (itemObj.prod_quantity === 0) {\n\t\t\t\tconst itemArray = [ ...state.selectedItems ];\n\t\t\t\titemArray.splice(itemIndex, 1);\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedItems: itemArray\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst itemArray = [ ...state.selectedItems ];\n\t\t\titemArray[itemIndex] = itemObj;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedItems: itemArray\n\t\t\t};\n\t\t}\n\n\t\tcase actionTypes.CALCULATE_TOTAL_PRICE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttotalPrice: action.total_price\n\t\t\t};\n\t\t}\n\n\t\tcase actionTypes.SEARCH_PRODUCT_LISTING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchInputValue: action.event.target.value\n\t\t\t};\n\t\t}\n\n\t\tcase actionTypes.ALL_PRODUCT_LISTING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: action.products\n\t\t\t};\n\t\t}\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}